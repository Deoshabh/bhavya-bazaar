events {
  worker_connections 1024;
  use epoll;
  multi_accept on;
}

http {
  include /etc/nginx/mime.types;
  default_type application/octet-stream;

  # Logging configuration
  log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                  '$status $body_bytes_sent "$http_referer" '
                  '"$http_user_agent" "$http_x_forwarded_for" '
                  'rt=$request_time uct="$upstream_connect_time" '
                  'uht="$upstream_header_time" urt="$upstream_response_time"';

  access_log /var/log/nginx/access.log main;
  error_log /var/log/nginx/error.log warn;

  # Performance optimizations
  sendfile on;
  tcp_nopush on;
  tcp_nodelay on;
  keepalive_timeout 65;
  types_hash_max_size 2048;
  client_max_body_size 10M;

  # Rate limiting
  limit_req_zone $binary_remote_addr zone=api:10m rate=10r/s;
  limit_req_zone $binary_remote_addr zone=login:10m rate=5r/m;

  server {
    listen 80;
    server_name localhost;
    root /usr/share/nginx/html;
    index index.html;

    # Health check endpoint
    location /health {
      access_log off;
      return 200 "healthy\n";
      add_header Content-Type text/plain;
    }

    # Cache static assets for 1 year with versioning
    location /static/ {
      expires 1y;
      add_header Cache-Control "public, immutable";
      add_header Vary "Accept-Encoding";
      
      # Enable compression for static assets
      gzip_static on;
    }

    # Cache images and other assets
    location ~* \.(jpg|jpeg|png|gif|ico|svg|webp)$ {
      expires 6M;
      add_header Cache-Control "public, immutable";
      add_header Vary "Accept-Encoding";
    }

    # Cache fonts
    location ~* \.(woff|woff2|ttf|eot)$ {
      expires 1y;
      add_header Cache-Control "public, immutable";
      add_header Access-Control-Allow-Origin "*";
    }

    # API proxy with rate limiting (if needed)
    location /api/ {
      limit_req zone=api burst=20 nodelay;
      
      # Proxy to backend (uncomment and configure for production)
      # proxy_pass http://backend:8000;
      # proxy_set_header Host $host;
      # proxy_set_header X-Real-IP $remote_addr;
      # proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      # proxy_set_header X-Forwarded-Proto $scheme;
      
      return 404; # Remove this when backend is configured
    }

    # Handle React routing - fallback to index.html
    location / {
      try_files $uri $uri/ /index.html;
      
      # No-cache for HTML files
      location ~* \.html$ {
        expires -1;
        add_header Cache-Control "no-cache, no-store, must-revalidate";
        add_header Pragma "no-cache";
      }
    }

    # Enhanced security headers
    add_header X-Frame-Options "SAMEORIGIN" always;
    add_header X-Content-Type-Options "nosniff" always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header Referrer-Policy "strict-origin-when-cross-origin" always;
    add_header Content-Security-Policy "default-src 'self'; script-src 'self' 'unsafe-inline'; style-src 'self' 'unsafe-inline'; img-src 'self' data: https:; font-src 'self';" always;

    # Remove server signature
    server_tokens off;

    # Gzip compression
    gzip on;
    gzip_vary on;
    gzip_min_length 1024;
    gzip_comp_level 6;
    gzip_types 
      text/plain
      text/css
      text/xml
      text/javascript
      application/javascript
      application/xml+rss
      application/json
      application/ld+json
      image/svg+xml;
  }
}
